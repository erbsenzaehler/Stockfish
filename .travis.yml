language: cpp
dist: xenial
osx_image: xcode9.4

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8', 'g++-8-multilib', 'g++-multilib', 'valgrind', 'expect', 'curl']
      env:
        - CXX=g++-8
        - COMP=gcc

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-6.0']
          packages: ['clang-6.0', 'llvm-6.0-dev', 'g++-multilib', 'valgrind', 'expect', 'curl']
      env:
        - CXX=clang++-6.0
        - COMP=clang
        - LDFLAGS=-fuse-ld=lld

    - os: osx
      compiler: gcc
      env:
        - CXX=g++
        - COMP=gcc

    - os: osx
      compiler: clang
      env:
        - CXX=clang++
        - COMP=clang

branches:
  only:
   - master

before_script:
  - cd src

script:
  # Obtain bench reference from git log
  - git log HEAD | grep "\b[Bb]ench[ :]\+[0-9]\{7\}" | head -n 1 | sed "s/[^0-9]*\([0-9]*\).*/\1/g" > git_sig
  - export benchref=$(cat git_sig)
  - echo "Reference bench:" $benchref
  #
  # Verify bench number against various builds
  - export CXXFLAGS=-Werror
  - $CXX --version
  - make clean && make -j2 ARCH=x86-64 CXX=$CXX COMP=$COMP optimize=no debug=yes build && ../tests/signature.sh $benchref
  - make clean && make -j2 ARCH=x86-32 CXX=$CXX COMP=$COMP optimize=no debug=yes build && ../tests/signature.sh $benchref
  - make clean && make -j2 ARCH=x86-32 CXX=$CXX COMP=$COMP build && ../tests/signature.sh $benchref

  #
  # Check perft and reproducible search
  - ../tests/perft.sh
  - ../tests/reprosearch.sh
  #
  # Valgrind
  #
  - export CXXFLAGS="-O1 -fno-inline"
  - if [ -x "$(command -v valgrind )" ]; then make clean && make -j2 ARCH=x86-64 CXX=$CXX COMP=$COMP debug=yes optimize=no build > /dev/null && ../tests/instrumented.sh --valgrind; fi
  - if [ -x "$(command -v valgrind )" ]; then ../tests/instrumented.sh --valgrind-thread; fi
  #
  # Sanitizer
  #
  # Use g++-8 as a proxy for having sanitizers, might need revision as they become available for more recent versions of clang/gcc
  - if [[ "$CXX" == "g++-8" ]]; then make clean && make -j2 ARCH=x86-64 CXX=$CXX COMP=$COMP sanitize=undefined optimize=no debug=yes build > /dev/null && ../tests/instrumented.sh --sanitizer-undefined; fi
  - if [[ "$CXX" == "g++-8" ]]; then make clean && make -j2 ARCH=x86-64 CXX=$CXX COMP=$COMP sanitize=thread    optimize=no debug=yes build > /dev/null && ../tests/instrumented.sh --sanitizer-thread; fi
